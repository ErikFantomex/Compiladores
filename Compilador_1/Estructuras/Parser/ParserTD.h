#ifndef PARSERTD_H_INCLUDED
#define PARSERTD_H_INCLUDED

/* Nombre: ParserTD.h
   Autor: Luis Juventino Velasquez H.
   Fecha: 19/04/21
   Descripción: Archivo de cabecera de la clase ParserTD
*/

#include<iostream>
#include"../Gramatica/Gramatica.h"
#include"../Utileria/Pila.h"

//*************************************************************************************
/** \brief Clase para usar un parser Top Down
 */
class ParserTD
{

 /*****************************************************************************************
 ***************************   Funciones externas y amigas   ******************************
 *****************************************************************************************/


public:

 /*****************************************************************************************
 **********************************   Constructores    ************************************
 *****************************************************************************************/

    //*************************************************************************************
    /** \brief Constructor por defecto
    *
    */ParserTD(const char *dir);

 /*****************************************************************************************
 ************************************    Operadores    ************************************
 *****************************************************************************************/


 /*****************************************************************************************
 ********************************   Metodos y funciónes   *********************************
 *****************************************************************************************/

    //*************************************************************************************
    /** \brief Evalua
    *
    *   \param n El numero de filas de la matriz
    *   \param m El número de columnas del automata
    *   \param valIn El valor inicial de cada valor en la matriz
    *   \exception std::bad_alloc No hay memoria
    *
    */bool EvaluarCadena(std::string * cadena, int tamCad);

/*****************************************************************************************
 ************************************   Excepciónes   *************************************
 *****************************************************************************************/

    //*************************************************************************************
    class CaracterFuera: public std::exception
    {
        public:
            virtual const char * what() const throw();
        private:

    };

private:

    Gramatica gram;
    Pila<std::string> TOS;


 /*****************************************************************************************
 *********************************   Metodos privados   ***********************************
 *****************************************************************************************/

};

#endif // PARSERTD_H_INCLUDED
