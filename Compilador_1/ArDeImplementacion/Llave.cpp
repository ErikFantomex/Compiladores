/* Nombre: AFD.h
   Autor: Luis Juventino Velasquez H.
   Fecha: 19/04/21
   Descripción: Archivo de cabecera de la clase AFD
*/

#include"../Llave.h"

 /*****************************************************************************************
 **********************************   Constructores    ************************************
 *****************************************************************************************/
//*************************************************************************************
Llave::Llave()
{
    this->llave= "";
    this->valor = -6;
}


//*************************************************************************************
Llave::Llave(const Llave & ll2)
{
    (*this) = ll2;
}

 /*****************************************************************************************
 ************************************    Operadores    ************************************
 *****************************************************************************************/
//*************************************************************************************
Llave & Llave::operator= (const Llave & ll2)
{
    if(this == &ll2) return *this;

    this->llave = ll2.llave;
    this->valor = ll2.valor;

    return *this;
}


//*************************************************************************************
bool Llave::operator<(const Llave & ll2) const
{
    return this->llave < ll2.llave;
}


//*************************************************************************************
bool Llave::operator>(const Llave & ll2) const
{
    return this->llave > ll2.llave;
}


//*************************************************************************************
bool Llave::operator==(const Llave & ll2) const
{
    return this->llave == ll2.llave;
}


//*************************************************************************************
bool Llave::operator>=(const Llave & ll2) const
{
    return this->llave >= ll2.llave;
}


//*************************************************************************************
bool Llave::operator<=(const Llave & ll2) const
{
    return this->llave <= ll2.llave;
}



 /*****************************************************************************************
 ********************************   Metodos y funciónes   *********************************
 *****************************************************************************************/
//*************************************************************************************
void Llave::Set(const std::string & s, const int &v/*=0*/)
{
    llave=s;
    valor=v;
}


//*************************************************************************************
int Llave::GetValor() const
{
    return valor;
}


 /*****************************************************************************************
 *********************************   Metodos privados   ***********************************
 *****************************************************************************************/

